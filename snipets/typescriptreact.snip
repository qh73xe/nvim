# ========================================================
# REACT TSX 系スニペット
# ========================================================
extends typescript

snippet	quickstart
abbr	|REACT| QUICKSTART
options	head
	import React from "react";

	export interface ${1:#app}Props {}

	/** ${2:#:disc} */
	const $1: React.FC<$1Props> = React.memo((props) => {
		console.log(props);
		return ();
	});
	$1.displayName = "$1";
	export default $1;


snippet	comment-html
abbr	|REACT| HTML-COMMENT
options	head
	{/* ${0:#:comment} */}

snippet	component
abbr	|REACT| COMPONENT
options	head
	const ${0:#:app} : React.FC = () => {
		return ();
	};


snippet	ReactMemo
abbr	|REACT| React.memo()
	React.memo(${1})


snippet	displayName
abbr	|REACT| X.displayName = "X"
	${1:#app}.displayName = "$1";

  argTypes: {
    propertyA: {
      options: ['Item One', 'Item Two', 'Item Three'],
      control: { type: 'select' }, // Automatically inferred when 'options' is defined
    },
    propertyB: {
      options: ['Another Item One', 'Another Item Two', 'Another Item Three'],
    },
  },


# ========================================================
# STORYBOOK 系スニペット
# ========================================================
snippet	quickstart-story
abbr	|STORYBOOK| QUICKSTART
options	head
	import React from "react";
	import { ComponentStory, ComponentMeta } from "@storybook/react";
	import ${2:#:Component}, {$2Props} from "./${1:#:app}";

	export default {
		component: $2,
		parameters: { fileName: __filename },
	} as ComponentMeta<typeof $2>;

	export const $2Story: ComponentStory<typeof $2> = (args: $2Props) => {
		console.log(args);
		return <$2 {...args} />;
	}
	$2Story.args = {${4:#:args}};

snippet	argTypes-story
abbr	|STORYBOOK| argTypes
	argTypes: {
		${1:arg}: {
			options: [${2:values}],
			control: { type: "select" },
		},
	},
